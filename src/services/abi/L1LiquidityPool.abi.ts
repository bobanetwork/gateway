const L1LiquidityPoolABI = [
  'constructor()',
  'event AddLiquidity(address sender, uint256 amount, address tokenAddress)',
  'event ClientDepositL1(address sender, uint256 receivedAmount, address tokenAddress)',
  'event ClientDepositL1Batch(tuple(address to, address l2TokenAddress, uint256 amount)[] _tokens)',
  'event ClientPayL1(address sender, uint256 amount, uint256 userRewardFee, uint256 ownerRewardFee, uint256 totalFee, address tokenAddress)',
  'event ClientPayL1Settlement(address sender, uint256 amount, uint256 userRewardFee, uint256 ownerRewardFee, uint256 totalFee, address tokenAddress)',
  'event OwnerRecoverFee(address sender, address receiver, uint256 amount, address tokenAddress)',
  'event OwnershipTransferred(address newOwner)',
  'event Paused(address account)',
  'event RebalanceLP(uint256 amount, address tokenAddress)',
  'event Unpaused(address account)',
  'event WithdrawLiquidity(address sender, address receiver, uint256 amount, address tokenAddress)',
  'event WithdrawReward(address sender, address receiver, uint256 amount, address tokenAddress)',
  'function L1StandardBridgeAddress() view returns (address)',
  'function L2LiquidityPoolAddress() view returns (address)',
  'function SAFE_GAS_STIPEND() view returns (uint256)',
  'function SETTLEMENT_L2_GAS() view returns (uint32)',
  'function addLiquidity(uint256 _amount, address _tokenAddress) payable',
  'function clientDepositL1(uint256 _amount, address _tokenAddress) payable',
  'function clientDepositL1Batch(tuple(address l1TokenAddress, uint256 amount)[] _tokens) payable',
  'function clientPayL1(address _to, uint256 _amount, address _tokenAddress)',
  'function clientPayL1Settlement(address _to, uint256 _amount, address _tokenAddress)',
  'function configureFee(uint256 _userRewardMinFeeRate, uint256 _userRewardMaxFeeRate, uint256 _ownerRewardFeeRate)',
  'function configureGas(uint32 _l2GasFee, uint256 _safeGas)',
  'function currentDepositInfoHash() view returns (bytes32)',
  'function getUserRewardFeeRate(address _l1TokenAddress) view returns (uint256 userRewardFeeRate)',
  'function initialize(address _l1CrossDomainMessenger, address _l1CrossDomainMessengerFast, address _L2LiquidityPoolAddress, address _L1StandardBridgeAddress)',
  'function l1CrossDomainMessenger() view returns (address)',
  'function lastHashUpdateBlock() view returns (uint256)',
  'function owner() view returns (address)',
  'function ownerRecoverFee(uint256 _amount, address _tokenAddress, address _to)',
  'function ownerRewardFeeRate() view returns (uint256)',
  'function pause()',
  'function paused() view returns (bool)',
  'function poolInfo(address) view returns (address l1TokenAddress, address l2TokenAddress, uint256 userDepositAmount, uint256 lastAccUserReward, uint256 accUserReward, uint256 accUserRewardPerShare, uint256 accOwnerReward, uint256 startTime)',
  'function priorDepositInfoHash() view returns (bytes32)',
  'function rebalanceLP(uint256 _amount, address _tokenAddress)',
  'function registerPool(address _l1TokenAddress, address _l2TokenAddress)',
  'function relayerMessenger() view returns (address)',
  'function senderMessenger() view returns (address)',
  'function transferOwnership(address _newOwner)',
  'function unpause()',
  'function updateUserRewardPerShare(address _tokenAddress)',
  'function userInfo(address, address) view returns (uint256 amount, uint256 rewardDebt, uint256 pendingReward)',
  'function userRewardMaxFeeRate() view returns (uint256)',
  'function userRewardMinFeeRate() view returns (uint256)',
  'function withdrawLiquidity(uint256 _amount, address _tokenAddress, address _to)',
  'function withdrawReward(uint256 _amount, address _tokenAddress, address _to)',
]
export default L1LiquidityPoolABI
